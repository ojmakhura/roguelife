// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.life.family;

import bw.co.roguesystems.life.genus.GenusRepository;
import bw.co.roguesystems.life.order.OrderRepository;
import org.springframework.stereotype.Repository;

/**
 * @see Family
 */
@Repository("familyDao")
public class FamilyDaoImpl
    extends FamilyDaoBase
{
    
    public FamilyDaoImpl(
        OrderRepository orderRepository,
        GenusRepository genusRepository,
        FamilyRepository familyRepository
    ) {

        super(
            orderRepository,
            genusRepository,
            familyRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toFamilyVO(
        Family source,
        FamilyVO target)
    {
        // TODO verify behavior of toFamilyVO
        super.toFamilyVO(source, target);
        // WARNING! No conversion for target.order (can't convert source.getOrder():bw.co.roguesystems.life.order.Order to bw.co.roguesystems.life.order.OrderVO
        // WARNING! No conversion for target.genuses (can't convert source.getGenuses():bw.co.roguesystems.life.genus.Genus to bw.co.roguesystems.life.genus.GenusVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FamilyVO toFamilyVO(final Family entity)
    {
        // TODO verify behavior of toFamilyVO
        return super.toFamilyVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Family loadFamilyFromFamilyVO(FamilyVO familyVO)
    {
        // TODO implement loadFamilyFromFamilyVO
        throw new UnsupportedOperationException("bw.co.roguesystems.life.family.loadFamilyFromFamilyVO(FamilyVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (familyVO.getId() == null)
        {
            return  Family.Factory.newInstance();
        }
        else
        {
            return this.load(familyVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Family familyVOToEntity(FamilyVO familyVO)
    {
        // TODO verify behavior of familyVOToEntity
        Family entity = this.loadFamilyFromFamilyVO(familyVO);
        this.familyVOToEntity(familyVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void familyVOToEntity(
        FamilyVO source,
        Family target,
        boolean copyIfNull)
    {
        // TODO verify behavior of familyVOToEntity
        super.familyVOToEntity(source, target, copyIfNull);
    }
}