// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.life.phylum;

import bw.co.roguesystems.life.cls.ClassEntityRepository;
import bw.co.roguesystems.life.kingdom.KingdomRepository;
import org.springframework.stereotype.Repository;

/**
 * @see Phylum
 */
@Repository("phylumDao")
public class PhylumDaoImpl
    extends PhylumDaoBase
{
    
    public PhylumDaoImpl(
        KingdomRepository kingdomRepository,
        ClassEntityRepository classEntityRepository,
        PhylumRepository phylumRepository
    ) {

        super(
            kingdomRepository,
            classEntityRepository,
            phylumRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toPhylumVO(
        Phylum source,
        PhylumVO target)
    {
        // TODO verify behavior of toPhylumVO
        super.toPhylumVO(source, target);
        // WARNING! No conversion for target.kingdom (can't convert source.getKingdom():bw.co.roguesystems.life.kingdom.Kingdom to bw.co.roguesystems.life.kingdom.KingdomVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PhylumVO toPhylumVO(final Phylum entity)
    {
        // TODO verify behavior of toPhylumVO
        return super.toPhylumVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Phylum loadPhylumFromPhylumVO(PhylumVO phylumVO)
    {
        // TODO implement loadPhylumFromPhylumVO
        throw new UnsupportedOperationException("bw.co.roguesystems.life.phylum.loadPhylumFromPhylumVO(PhylumVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (phylumVO.getId() == null)
        {
            return  Phylum.Factory.newInstance();
        }
        else
        {
            return this.load(phylumVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Phylum phylumVOToEntity(PhylumVO phylumVO)
    {
        // TODO verify behavior of phylumVOToEntity
        Phylum entity = this.loadPhylumFromPhylumVO(phylumVO);
        this.phylumVOToEntity(phylumVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void phylumVOToEntity(
        PhylumVO source,
        Phylum target,
        boolean copyIfNull)
    {
        // TODO verify behavior of phylumVOToEntity
        super.phylumVOToEntity(source, target, copyIfNull);
    }
}