// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.life.genus;

import bw.co.roguesystems.life.family.FamilyRepository;
import bw.co.roguesystems.life.species.SpeciesRepository;
import org.springframework.stereotype.Repository;

/**
 * @see Genus
 */
@Repository("genusDao")
public class GenusDaoImpl
    extends GenusDaoBase
{
    
    public GenusDaoImpl(
        FamilyRepository familyRepository,
        SpeciesRepository speciesRepository,
        GenusRepository genusRepository
    ) {

        super(
            familyRepository,
            speciesRepository,
            genusRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toGenusVO(
        Genus source,
        GenusVO target)
    {
        // TODO verify behavior of toGenusVO
        super.toGenusVO(source, target);
        // WARNING! No conversion for target.family (can't convert source.getFamily():bw.co.roguesystems.life.family.Family to bw.co.roguesystems.life.family.FamilyVO
        // WARNING! No conversion for target.species (can't convert source.getSpecies():bw.co.roguesystems.life.species.Species to bw.co.roguesystems.life.species.SpeciesVO
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GenusVO toGenusVO(final Genus entity)
    {
        // TODO verify behavior of toGenusVO
        return super.toGenusVO(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private Genus loadGenusFromGenusVO(GenusVO genusVO)
    {
        // TODO implement loadGenusFromGenusVO
        throw new UnsupportedOperationException("bw.co.roguesystems.life.genus.loadGenusFromGenusVO(GenusVO) not yet implemented.");

        /* A typical implementation looks like this:
        if (genusVO.getId() == null)
        {
            return  Genus.Factory.newInstance();
        }
        else
        {
            return this.load(genusVO.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public Genus genusVOToEntity(GenusVO genusVO)
    {
        // TODO verify behavior of genusVOToEntity
        Genus entity = this.loadGenusFromGenusVO(genusVO);
        this.genusVOToEntity(genusVO, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void genusVOToEntity(
        GenusVO source,
        Genus target,
        boolean copyIfNull)
    {
        // TODO verify behavior of genusVOToEntity
        super.genusVOToEntity(source, target, copyIfNull);
    }
}